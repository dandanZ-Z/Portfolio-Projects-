CREATE OR REPLACE VIEW JOINED AS
SELECT menu.product_id, product_name, price, sales.customer_id, sales.order_date, members.join_date
FROM DD1.MENU
FULL JOIN DD1.SALES ON MENU.PRODUCT_ID = SALES.PRODUCT_ID
FULL JOIN DD1.MEMBERS ON SALES.CUSTOMER_ID = MEMBERS.CUSTOMER_ID;


-- 1. WHAT IS THE TOTAL AMOUNT EACH CUSTOMER SPENT AT THE RESTAURANT?
SELECT CUSTOMER_ID,
	SUM(PRICE) 
FROM JOINED
GROUP BY CUSTOMER_ID
ORDER BY CUSTOMER_ID 



-- 2. How many days has each customer visited the restaurant?
SELECT customer_id, count(distinct order_date)
FROM JOINED
GROUP BY CUSTOMER_ID



--3. WHAT WAS THE FIRST ITEM FROM THE MENU PURCHASED BY EACH CUSTOMER?  
WITH items AS (
  SELECT 
    customer_id, 
    product_name, 
    order_date,
    Rank() OVER (PARTITION BY customer_id ORDER BY order_date) AS rank
  FROM joined
)
SELECT customer_id, product_name
FROM items
WHERE rank = 1;



--4. WHAT IS THE MOST PURCHASED ITEM ON THE MENU AND HOW MANY TIMES WAS IT PURCHASED BY ALL CUSTOMERS? 
SELECT PRODUCT_NAME,
	COUNT(*) AS AMOUNT_PURCHASED
FROM JOINED
GROUP BY PRODUCT_NAME
ORDER BY AMOUNT_PURCHASED DESC
LIMIT 1


 
-- 5.WHICH ITEM WAS THE MOST POPULAR FOR EACH CUSTOMER? 
WITH RANKED_ITEMS AS
	(SELECT CUSTOMER_ID,
			PRODUCT_NAME,
			RANK() OVER (PARTITION BY CUSTOMER_ID ORDER BY COUNT (PRODUCT_ID) DESC) AS RANK
		FROM JOINED
		GROUP BY CUSTOMER_ID,
			PRODUCT_NAME)
SELECT CUSTOMER_ID,
	PRODUCT_NAME
FROM RANKED_ITEMS
WHERE RANK = 1



-- 6. WHICH ITEM WAS PURCHASED FIRST BY THE CUSTOMER AFTER THEY BECAME A MEMBER?
WITH RANKED_ITEMS AS
	(SELECT CUSTOMER_ID,
			PRODUCT_NAME,
			ORDER_DATE,
			RANK() OVER (PARTITION BY CUSTOMER_ID ORDER BY ORDER_DATE ASC) AS RANK
		FROM JOINED
		WHERE ORDER_DATE > JOIN_DATE)
SELECT CUSTOMER_ID,
	PRODUCT_NAME,
	ORDER_DATE
FROM RANKED_ITEMS
WHERE RANK = 1
GROUP BY CUSTOMER_ID,
	ORDER_DATE,
	PRODUCT_NAME



-- 7.WHICH ITEM WAS PURCHASED JUST BEFORE THE CUSTOMER BECAME A MEMBER? 
WITH RANKED_ITEMS AS
	(SELECT CUSTOMER_ID,
			PRODUCT_NAME,
			ORDER_DATE,
			JOIN_DATE,
			RANK() OVER (PARTITION BY CUSTOMER_ID ORDER BY ORDER_DATE DESC) AS RANK
		FROM JOINED
		WHERE ORDER_DATE < JOIN_DATE)
SELECT CUSTOMER_ID,
	PRODUCT_NAME,
	ORDER_DATE,
	JOIN_DATE
FROM RANKED_ITEMS
WHERE RANK = 1
GROUP BY CUSTOMER_ID,
	ORDER_DATE,
	PRODUCT_NAME,
	JOIN_DATE



-- 8.WHAT IS THE TOTAL ITEMS AND AMOUNT SPENT FOR EACH MEMBER BEFORE THEY BECAME A MEMBER?
SELECT CUSTOMER_ID,
	COUNT(DISTINCT PRODUCT_NAME) AS NO_OF_ITEMS,
	SUM(PRICE) AS TOTAL_SPENT
FROM JOINED
WHERE ORDER_DATE < JOIN_DATE
GROUP BY CUSTOMER_ID
ORDER BY CUSTOMER_ID



9. IF EACH $1 SPENT EQUATES TO 10 POINTS AND SUSHI HAS A 2X POINTS MULTIPLIER - HOW MANY POINTS WOULD EACH CUSTOMER HAVE?
SELECT CUSTOMER_ID,
	SUM(CASE
		WHEN PRODUCT_NAME = 'Sushi' THEN PRICE * 20
		ELSE PRICE * 10
		END) AS POINTS
FROM JOINED
GROUP BY CUSTOMER_ID
ORDER BY CUSTOMER_ID



--10. In THE FIRST WEEK AFTER A CUSTOMER JOINS THE PROGRAM (INCLUDING THEIR JOIN DATE) THEY EARN 2X POINTS ON ALL ITEMS,
--NOT JUST SUSHI - HOW MANY POINTS DO CUSTOMER A AND B HAVE AT THE END OF JANUARY?
WITH point_system AS (
  SELECT 
    customer_id,
    SUM(CASE 
          WHEN order_date < DATE_TRUNC('day', join_date) + INTERVAL '7' DAY THEN price * 20 
          WHEN product_name = 'Sushi' THEN price * 20 
          ELSE price * 10 
        END) AS total_points
  FROM joined
  GROUP BY customer_id, join_date
)
SELECT customer_id, total_points
FROM point_system
WHERE customer_id IN ('A', 'B')
ORDER BY customer_id
